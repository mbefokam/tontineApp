{
  "_args": [
    [
      {
        "raw": "ddp-ejson@0.8.1-3",
        "scope": null,
        "escapedName": "ddp-ejson",
        "name": "ddp-ejson",
        "rawSpec": "0.8.1-3",
        "spec": "0.8.1-3",
        "type": "version"
      },
      "C:\\interview\\tontineApp\\node_modules\\xolvio-ddp"
    ]
  ],
  "_from": "ddp-ejson@0.8.1-3",
  "_id": "ddp-ejson@0.8.1-3",
  "_inCache": true,
  "_location": "/ddp-ejson",
  "_npmUser": {
    "name": "emgee",
    "email": "hello@gravitronic.com"
  },
  "_npmVersion": "1.4.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ddp-ejson@0.8.1-3",
    "scope": null,
    "escapedName": "ddp-ejson",
    "name": "ddp-ejson",
    "rawSpec": "0.8.1-3",
    "spec": "0.8.1-3",
    "type": "version"
  },
  "_requiredBy": [
    "/xolvio-ddp"
  ],
  "_resolved": "https://registry.npmjs.org/ddp-ejson/-/ddp-ejson-0.8.1-3.tgz",
  "_shasum": "e9d67466ab789bd74e7d97074a36e240690eeec2",
  "_shrinkwrap": null,
  "_spec": "ddp-ejson@0.8.1-3",
  "_where": "C:\\interview\\tontineApp\\node_modules\\xolvio-ddp",
  "author": {
    "name": "emgee3"
  },
  "bugs": {
    "url": "https://github.com/oortcloud/ddp-ejson/issues"
  },
  "dependencies": {
    "ddp-underscore-patched": "0.8.1-2"
  },
  "description": "Extended JSON as seen in Meteor and DDP",
  "devDependencies": {
    "test": "~0.6.0"
  },
  "directories": {},
  "dist": {
    "shasum": "e9d67466ab789bd74e7d97074a36e240690eeec2",
    "tarball": "https://registry.npmjs.org/ddp-ejson/-/ddp-ejson-0.8.1-3.tgz"
  },
  "homepage": "https://github.com/oortcloud/ddp-ejson#readme",
  "keywords": [
    "JSON",
    "EJSON",
    "serialization",
    "meteor",
    "ddp"
  ],
  "license": "MIT",
  "main": "ejson.js",
  "maintainers": [
    {
      "name": "emgee",
      "email": "hello@gravitronic.com"
    }
  ],
  "name": "ddp-ejson",
  "optionalDependencies": {},
  "readme": "ejson\n=====\n\n[![Build Status](https://travis-ci.org/oortcloud/ddp-ejson.svg)](https://travis-ci.org/oortcloud/ddp-ejson)\n\nExtended JSON library; used in [Meteor](http://meteor.com)'s [Distributed Data Protocol](https://github.com/meteor/meteor/blob/devel/packages/livedata/DDP.md).\n\n\nEJSON is a way of embedding more than the built-in JSON types in JSON.  It\nsupports all types built into JSON as plain JSON, plus the following:\n\n**Dates:**\n\n    {\"$date\": MILLISECONDS_SINCE_EPOCH}\n\n**Binary data:**\n\n    {\"$binary\": BASE_64_STRING}\n\n(The base 64 string has `+` and `/` as characters 62 and 63, and has no maximum line length)\n\n**Escaped things** that might otherwise look like EJSON types:\n\n    {\"$escape\": THING}\n\nFor example, here is the JSON value `{$date: 10000}` stored in EJSON:\n\n    {\"$escape\": {\"$date\": 10000}}\n\nNote that escaping only causes keys to be literal for one level down; you can\nhave further EJSON inside.  For example, the following is the key `$date` mapped\nto a Date object:\n\n    {\"$escape\": {\"$date\": {\"$date\": 32491}}}\n\n**User-specified types:**\n\n    {\"$type\": TYPENAME, \"$value\": VALUE}\n\n\n**Meteor ObjectIDs**\n\nSupport for the \"oid\" custom type used for Meteor ObjectIDs is built-in:\n\n\t{\"$type\": \"oid\", \"$value\": \"c896e40bf6e51bbdc9adcf59\"}\n\nObjectIDs may also be constructed:\n\n```js\n// Create a new Random ID\nObjID = new EJSON.ObjectID()\n\n// Create an ID with a known value\nmyID = new EJSON.ObjectID(\"c896e40bf6e51bbdc9adcf59\")\n```\n\nImplementations of EJSON should try to preserve key order where they can.  Users\nof EJSON should not rely on key order, if possible.\n\n> MongoDB relies on key order.  When using EJSON with MongoDB, the\n> implementation of EJSON must preserve key order.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/oortcloud/ddp-ejson.git"
  },
  "scripts": {
    "test": "node ejson_test.js"
  },
  "version": "0.8.1-3"
}
