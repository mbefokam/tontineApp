{
  "_args": [
    [
      {
        "raw": "grunt-protractor-runner@^5.0.0",
        "scope": null,
        "escapedName": "grunt-protractor-runner",
        "name": "grunt-protractor-runner",
        "rawSpec": "^5.0.0",
        "spec": ">=5.0.0 <6.0.0",
        "type": "range"
      },
      "C:\\interview\\tontineApp"
    ]
  ],
  "_from": "grunt-protractor-runner@>=5.0.0 <6.0.0",
  "_id": "grunt-protractor-runner@5.0.0",
  "_inCache": true,
  "_location": "/grunt-protractor-runner",
  "_nodeVersion": "6.10.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/grunt-protractor-runner-5.0.0.tgz_1489588818448_0.20360962208360434"
  },
  "_npmUser": {
    "name": "teerapap",
    "email": "teerapapc+npm@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "grunt-protractor-runner@^5.0.0",
    "scope": null,
    "escapedName": "grunt-protractor-runner",
    "name": "grunt-protractor-runner",
    "rawSpec": "^5.0.0",
    "spec": ">=5.0.0 <6.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/grunt-protractor-runner/-/grunt-protractor-runner-5.0.0.tgz",
  "_shasum": "862d43c2ba0f82ad9364e861dc4aa79b0e6426c1",
  "_shrinkwrap": null,
  "_spec": "grunt-protractor-runner@^5.0.0",
  "_where": "C:\\interview\\tontineApp",
  "author": {
    "name": "Teerapap Changwichukarn",
    "email": "teerapap.c@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/teerapap/grunt-protractor-runner/issues"
  },
  "dependencies": {
    "protractor": "^5.0.0",
    "split": "~1.0.0",
    "through2": "~2.0.0"
  },
  "description": "A Grunt plugin for running protractor runner.",
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-clean": "~0.7.0",
    "grunt-contrib-jshint": "~0.11.3",
    "grunt-contrib-nodeunit": "~0.4.1"
  },
  "directories": {},
  "dist": {
    "shasum": "862d43c2ba0f82ad9364e861dc4aa79b0e6426c1",
    "tarball": "https://registry.npmjs.org/grunt-protractor-runner/-/grunt-protractor-runner-5.0.0.tgz"
  },
  "engines": {
    "node": ">= 6.9.4"
  },
  "gitHead": "eb9e67fd0cd1f9bf4d93e66654967b110d793693",
  "homepage": "https://github.com/teerapap/grunt-protractor-runner",
  "keywords": [
    "gruntplugin",
    "protractor",
    "selenium",
    "angular",
    "angularjs"
  ],
  "license": "MIT",
  "main": "Gruntfile.js",
  "maintainers": [
    {
      "name": "teerapap",
      "email": "teerapap.c@gmail.com"
    }
  ],
  "name": "grunt-protractor-runner",
  "optionalDependencies": {},
  "peerDependencies": {
    "grunt": ">=0.4.0"
  },
  "readme": "# grunt-protractor-runner\r\n\r\n[![Build Status](https://travis-ci.org/teerapap/grunt-protractor-runner.svg?branch=master)](https://travis-ci.org/teerapap/grunt-protractor-runner)\r\n\r\n> A Grunt plugin for running [Protractor](https://github.com/angular/protractor) runner.\r\n\r\n## Getting Started\r\nThis plugin requires Grunt `>=0.4.1`.\r\n\r\nFor Protractor `5.x.x`, please use version `v5.x.x` of this plugin.\r\n\r\nFor Protractor `4.x.x`, please use version `v4.x.x` of this plugin.\r\n\r\nFor Protractor `3.x.x`, please use version `v3.x.x` of this plugin.\r\n\r\nFor Protractor `2.x.x`, please use version `v2.x.x` of this plugin.\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-protractor-runner --save-dev\r\n```\r\n\r\nThis plugin will install `protractor` module locally as a normal dependency.\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-protractor-runner');\r\n```\r\n\r\nFinally you need a Selenium server. If you don't have one set up already, you can install a local standalone version with this command:\r\n\r\n```shell\r\n./node_modules/grunt-protractor-runner/scripts/webdriver-manager-update\r\n```\r\n\r\n## The \"protractor\" task\r\n\r\n### Overview\r\nIn your project's Gruntfile, add a section named `protractor` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  protractor: {\r\n    options: {\r\n      configFile: \"node_modules/protractor/example/conf.js\", // Default config file\r\n      keepAlive: true, // If false, the grunt process stops when the test fails.\r\n      noColor: false, // If true, protractor will not use colors in its output.\r\n      args: {\r\n        // Arguments passed to the command\r\n      }\r\n    },\r\n    your_target: {   // Grunt requires at least one target to run so you can simply put 'all: {}' here too.\r\n      options: {\r\n        configFile: \"e2e.conf.js\", // Target-specific config file\r\n        args: {} // Target-specific arguments\r\n      }\r\n    },\r\n  },\r\n})\r\n```\r\n\r\n### Options\r\n\r\n#### options.configFile\r\nType: `String`\r\nDefault value: No default value\r\n\r\nA protractor config file.\r\n\r\n#### options.keepAlive\r\nType: `Boolean`\r\nDefault value: `false` (`true` before v1.0.0)\r\n\r\nIf true, grunt process continues even if the test fails. This option is useful when using with grunt watch.\r\nIf false, grunt process stops when the test fails.\r\n\r\n#### options.noColor\r\nType: `Boolean`\r\nDefault value: `false`\r\n\r\nIf true, protractor will not give colored output.\r\nIf false, protractor will give colored output, as it does by default.\r\n\r\n#### options.debug\r\nType: `Boolean`\r\nDefault value: `false`\r\n\r\nIf true, grunt will pass 'debug' as second argument to protractor CLI to enable node CLI debugging as described in [Protractor Debugging documentation](https://github.com/angular/protractor/blob/master/docs/debugging.md).\r\n\r\n#### options.args\r\nType: `Object`\r\nDefault value: `{}`\r\n\r\nArguments passed to the command. These arguments can also be supplied via command-line too. Ex.`grunt protractor --specs=specs/some-test.js`  or for object options `grunt protractor --cucumberOpts={\\\"tags\\\":\\\"@quick\\\"}` or `--params='{ \"location\" : { \"href\" : \"some url\" } }'`\r\n\r\nPassing object argument with `--params.xxx.yyy=zzz` is not supported at the moment. If you need this behaviour, please join the discussion in [#148](https://github.com/teerapap/grunt-protractor-runner/pull/148) .\r\n\r\nSupported arguments are below.\r\n\r\n* seleniumAddress `string`: A running selenium address to use\r\n* seleniumServerJar `string`: Location of the standalone selenium server .jar file\r\n* seleniumPort `string`: Optional port for the standalone selenium server\r\n* baseUrl `string`: URL to prepend to all relative paths\r\n* rootElement `string`: Element housing ng-app, if not html or body\r\n* specs `array`: Array of spec files to test. Ex. `[\"spec1.js\",\"spec2.js\"]`\r\n* exclude `array`: Array of files to exclude from testing. Ex. `[\"spec2.js\"]`\r\n* suite `string` or `array`: Suite or Array of suites to run. Ex. `[\"suite1\", \"suite2\"]`\r\n* includeStackTrace `boolean`: Print stack trace on error\r\n* verbose `boolean`: Print full spec names\r\n* browser `string`: Browser name, e.g. chrome or firefox\r\n* params `object`: Param object to be passed to the test as browser.params\r\n* chromeDriver `string`: Location of chrome driver overridng the property in config file\r\n* directConnect `boolean`: To connect directly to the browser Drivers. This option is only available for Firefox and Chrome.\r\n* sauceUser `string`: Username for a SauceLabs account\r\n* sauceKey `string`: Access Key for a SauceLabs account\r\n* sauceSeleniumAddress `string`: Customize the URL Protractor uses to connect to sauce labs (for example, if you are tunneling selenium traffic through a sauce connect tunnel). Default is `ondemand.saucelabs.com:80/wd/hub`\r\n* capabilities `object`: Capabilities object to be passed to the test, e.g. browserName, platform and version\r\n* framework `string`: Limited support for using mocha as the test framework instead of jasmine.\r\n* frameworkPath `string`: When `framework` is set to `custom`, set this path relative to the config file or absolute\r\n* cucumberOpts `object`: Cucumber framework options object to be passed to the test, e.g. require, tags and format\r\n* mochaOpts `object`: Mocha test framework options object to be passed\r\n* beforeLaunch `string`: You can specify a file containing code to run once configs are read but before any environment setup. This will only run once, and before onPrepare.\r\n* onPrepare `string`: You can specify a file containing code to run once protractor is ready and available, and before the specs are executed. If multiple capabilities are being run, this will run once per capability.\r\n* webDriverProxy `string`: WebDriver proxy configuration to run remote tests\r\n\r\n#### options.output\r\nType: `String`\r\nDefault value: `false`\r\n\r\nThe file that the task should output the results to.\r\n\r\n#### options.outputOptions\r\nType: `Object`\r\nDefault value: `{}`\r\n\r\nOptions for output file. For details see: [fs.createWriteStream's options](https://nodejs.org/api/fs.html#fs_fs_createwritestream_path_options)\r\n\r\n#### options.nodeBin\r\nType: `String`\r\nDefault value: `node`\r\n\r\nPath to the node binary file. Useful if node is not on the PATH.\r\n\r\n#### options.webdriverManagerUpdate\r\nType: `Boolean`\r\nDefault value: `false`\r\n\r\nIf true, `webdriver-manager update` will run and install/update selenium driver.\r\n\r\n## Tests\r\n\r\nRun `npm install` to install dependencies.\r\n\r\nThen run `grunt` or `npm test` to test the module. You will encounter these.\r\n\r\n* Runs unit and e2e tests\r\n* It opens chrome a couple of times without warnings or errors.\r\n* A test task fails but the test process keeps alive and continues to the next test tasks.\r\n\r\n## Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\r\n\r\n## FAQ\r\n\r\n### Q: Want to global installed protractor?\r\n\r\nThis plugin installs `protractor` module locally as a normal dependency.\r\n\r\nIn case you want to use the plugin with the global installed protractor command. You can do it with these steps below.\r\n\r\n* Remove local install protractor by `rm -rf node_modules/protractor`\r\n* Install `protractor` globally  with `npm install -g protractor`\r\n* Make sure that node can resolve the module with `require()` mechanism. See [Module loading from the global folders](http://nodejs.org/api/modules.html#modules_loading_from_the_global_folders) for more information.\r\n* Run `webdriver-manager update` to install/update selenium driver for global install protractor.\r\n\r\n### Q: Error: Could not find chromedriver at....\r\n\r\nYou need to install/update selenium webdriver for protractor.\r\n\r\n* Run `webdriver-manager update` or `node scripts/webdriver-manager-update` or `node ./node_modules/protractor/bin/webdriver-manager update`\r\n\r\n## Release History\r\n\r\n* 5.0.0\r\n  * Upgrade `protractor` to version 5 (#185)\r\n\r\n* 4.0.0\r\n  * Accept array for `suite` argument (#172)\r\n  * Upgrade `protractor` to version 4 (#168)\r\n\r\n* 3.2.0\r\n  * Support --frameworkPath in options.args (#155, #156)\r\n  * Support `grunt` version `>=0.4.0\"` (#154)\r\n* 3.1.0\r\n  * Add `options.outputOptions` (#143)\r\n  * Support `webDriverProxy` in `options.args` (#147)\r\n  * Remove referenceConf.js as default value of options.configFile because it does not exist anymore\r\n* 3.0.0\r\n  * Update protractor to version 3\r\n  * Update other dependencies including through2 and split to latest version\r\n\r\n* 2.1.2\r\n  * Fix boolean parameters in object.args.params (#130)\r\n  * Modify unit tests to run nodeunit test faster and after protractor task\r\n* 2.1.1\r\n  * Fix EINVAL error when run in git bash shell (#134)\r\n* 2.1.0\r\n  * Add `options.webdriverManagerUpdate` option (#125)\r\n  * Fix support for object option via command-line (#116)\r\n* 2.0.0\r\n  * Upgrade `protractor` to `^2.0.0` (#114)\r\n  * `chromeOnly` in `options.args` is deprecated. Replaced by `directConnect` (#114)\r\n  * Support `beforeLaunch` and `onPrepare` in `options.args` (#110)\r\n  * When one of the tests fails, throw warning instead of fatal error so that grunt can still use --force to continue. (#103)\r\n\r\n* 1.2.1\r\n  * Move `split` and `through2` from devDependencies to dependencies (#104)\r\n* 1.2.0\r\n  * Add `options.nodeBin` to specify node binary (#96)\r\n  * Support --directConnect and --sauceSeleniumAddress in options.args (#95, #101)\r\n  * Add options.output (#80)\r\n  * Merge README.md PRs (#89, #91)\r\n  * Fix plugin test for protractor>=v1.5.0\r\n  * Fix TravisCI test\r\n* 1.1.4\r\n  * Move `webdriver-manager update` step from problematic postinstall to pretest\r\n* 1.1.3\r\n  * Attempt to fix webdriver-manager postinstall problem with webdriver-manager script (#83)\r\n* 1.1.2\r\n  * Attempt to fix webdriver-manager path in package.json postinstall\r\n  * Add Travis CI build configuration\r\n* 1.1.1\r\n  * Run webdriver-manager update on postinstall (#41)\r\n* 1.1.0\r\n  * Update protractor to version 1.x.x\r\n* 1.0.1\r\n  * Pass specified command line params to the subprocess (#68)\r\n  * Make npm test to run and handle interactive debugger by itself (#66)\r\n  * Fixed argsTest\r\n* 1.0.0\r\n  * Change default value of `options.keepAlive` to false (#50)\r\n\r\n* 0.2.5\r\n  * Support --mochaOpts, --suite and --exclude in options.args (#52, #53, #57)\r\n* 0.2.4\r\n  * Support --cucumberOpts in options.args (#46)\r\n* 0.2.3\r\n  * Temporarily remove automatically download/update webdriver-manager because it fails in some environment such as Windows (#41)\r\n* 0.2.2\r\n  * Add `protractor` module as a normal dependency and automatically download/update webdriver with `webdriver-manager` after installed (#29, #39)\r\n  * Support --framework in options.args (#36)\r\n* 0.2.1\r\n  * Support --capabilities in options.args (#33)\r\n* 0.2.0\r\n  * Able to use either local or global install protractor the same way as how `require()` function works (#29)\r\n  * Move protractor from `peerDependencies` to `devDependencies`. These changes might break some user modules. (See FAQ above for explanation) (#29)\r\n* 0.1.11 - Support SauceLabs account config in options.args (#27)\r\n* 0.1.10\r\n  * Support --chromeOnly in options.args (#23)\r\n  * Support options.noColor to turn color off in protractor output (#24)\r\n* 0.1.9\r\n  * Able to supply options.args via command-line arguments (#20)\r\n  * Fixed merging task-level and target-level options\r\n* 0.1.8 - Support --chromeDriver in options.args (#17)\r\n* 0.1.7 - Support --browser and --params arguments passed to the protractor command using config in options.args (#12)\r\n* 0.1.6 - Change protractor(peerDependencies) to support version to 0.x (#8, #9, #10)\r\n* 0.1.5 - Added `options.debug` (#7)\r\n* 0.1.4 - Change protractor(peerDependencies) to support version to 0.10.x - 0.11.x (#6)\r\n* 0.1.3 - Fixed Windows command\r\n* 0.1.2 - Added keepAlive option.\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/teerapap/grunt-protractor-runner.git"
  },
  "scripts": {
    "test": "grunt test"
  },
  "version": "5.0.0"
}
