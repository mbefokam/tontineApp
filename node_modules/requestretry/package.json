{
  "_args": [
    [
      {
        "raw": "requestretry@1.5.0",
        "scope": null,
        "escapedName": "requestretry",
        "name": "requestretry",
        "rawSpec": "1.5.0",
        "spec": "1.5.0",
        "type": "version"
      },
      "C:\\interview\\tontineApp\\node_modules\\chimp"
    ]
  ],
  "_from": "requestretry@1.5.0",
  "_id": "requestretry@1.5.0",
  "_inCache": true,
  "_location": "/requestretry",
  "_npmUser": {
    "name": "fgribreau",
    "email": "npm@fgribreau.com"
  },
  "_npmVersion": "1.4.28",
  "_phantomChildren": {},
  "_requested": {
    "raw": "requestretry@1.5.0",
    "scope": null,
    "escapedName": "requestretry",
    "name": "requestretry",
    "rawSpec": "1.5.0",
    "spec": "1.5.0",
    "type": "version"
  },
  "_requiredBy": [
    "/chimp"
  ],
  "_resolved": "https://registry.npmjs.org/requestretry/-/requestretry-1.5.0.tgz",
  "_shasum": "ed157bba53526edeb3ec32a8e704a4998bece627",
  "_shrinkwrap": null,
  "_spec": "requestretry@1.5.0",
  "_where": "C:\\interview\\tontineApp\\node_modules\\chimp",
  "author": {
    "name": "Francois-Guillaume Ribreau",
    "email": "npm@fgribreau.com",
    "url": "http://fgribreau.com"
  },
  "bugs": {
    "url": "https://github.com/FGRibreau/node-request-retry/issues"
  },
  "contributors": [
    {
      "name": "juliendangers",
      "email": "dev@juliencrestin.com"
    }
  ],
  "dependencies": {
    "fg-lodash": "0.0.2",
    "request": "^2.62.x"
  },
  "description": "request-retry wrap nodejs request to retry http(s) requests in case of error",
  "devDependencies": {
    "chai": "^3.2.0",
    "mocha": "^2.3.0"
  },
  "directories": {},
  "dist": {
    "shasum": "ed157bba53526edeb3ec32a8e704a4998bece627",
    "tarball": "https://registry.npmjs.org/requestretry/-/requestretry-1.5.0.tgz"
  },
  "gitHead": "1b7ca7c88a79f9221c1ab6974b191daf3c29d913",
  "homepage": "https://github.com/FGRibreau/node-request-retry#readme",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "fgribreau",
      "email": "npm@fgribreau.com"
    }
  ],
  "name": "requestretry",
  "optionalDependencies": {},
  "readme": "# Request-retry [![Deps](https://david-dm.org/FGRibreau/node-request-retry.png)](https://david-dm.org/FGRibreau/node-request-retry) [![Build Status](https://drone.io/github.com/FGRibreau/node-request-retry/status.png)](https://drone.io/github.com/FGRibreau/node-request-retry/latest) [![Downloads](http://img.shields.io/npm/dm/requestretry.svg)](https://www.npmjs.com/package/requestretry)\n\n[![npm](https://nodei.co/npm/requestretry.png)](https://npmjs.org/package/requestretry)\n\nWhen the connection fails with one of `ECONNRESET`, `ENOTFOUND`, `ESOCKETTIMEDOUT`, `ETIMEDOUT`, `ECONNREFUSED`, `EHOSTUNREACH`, `EPIPE`, `EAI_AGAIN` or when an HTTP 5xx error occurrs, the request will automatically be re-attempted as these are often recoverable errors and will go away on retry.\n\n## Usage\n\nRequest-retry is a drop-in replacement for [request](https://github.com/mikeal/request) but adds two new options `maxAttempts` and `retryDelay`. It also adds one property to the response, `attempts`.\n\n```javascript\nvar request = require('requestretry');\n\nrequest({\n  url: 'https://api.domain.com/v1/a/b'\n  json:true,\n\n  // The above parameters are specific to Request-retry\n  maxAttempts: 5,   // (default) try 5 times\n  retryDelay: 5000,  // (default) wait for 5s before trying again\n  retryStrategy: request.RetryStrategies.HTTPOrNetworkError // (default) retry on 5xx or network errors\n}, function(err, response, body){\n  // this callback will only be called when the request succeeded or after maxAttempts or on error\n  if (response) {\n    console.log('The number of request attempts: ' + response.attempts);\n  }\n});\n```\n\n## Installation\n\nInstall with [npm](https://npmjs.org/package/requestretry).\n\n    npm install --save requestretry\n\n## How to define your own retry strategy\n\n```\n/**\n * @param  {Null | Object} err\n * @param  {Object} response\n * @return {Boolean} true if the request should be retried\n */\nfunction myRetryStrategy(err, response){\n  // retry the request if we had an error or if the response was a 'Bad Gateway'\n  return err ||Â response.statusCode === 502;\n}\n\nrequest({\n  url: 'https://api.domain.com/v1/a/b'\n  json:true,\n  retryStrategy: myRetryStrategy\n}, function(err, response, body){\n  // this callback will only be called when the request succeeded or after maxAttempts or on error\n});\n```\n\n## Modifying `request` options\nYou can access request's `defaults` method like so:\n\n```js\nvar request = require('requestretry').request.defaults({my: options});\n```\n\n## Todo\n\n- Tests\n\n## [Changelog](CHANGELOG.md)\n\nCopyright 2014, [Francois-Guillaume Ribreau](http://fgribreau.com) (npm@fgribreau.com)\n",
  "readmeFilename": "README.md",
  "repository": {
    "url": "git+https://github.com/FGRibreau/node-request-retry.git"
  },
  "scripts": {
    "test": "mocha test"
  },
  "version": "1.5.0"
}
