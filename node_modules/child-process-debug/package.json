{
  "_args": [
    [
      {
        "raw": "child-process-debug@0.0.7",
        "scope": null,
        "escapedName": "child-process-debug",
        "name": "child-process-debug",
        "rawSpec": "0.0.7",
        "spec": "0.0.7",
        "type": "version"
      },
      "C:\\interview\\tontineApp\\node_modules\\chimp"
    ]
  ],
  "_from": "child-process-debug@0.0.7",
  "_id": "child-process-debug@0.0.7",
  "_inCache": true,
  "_location": "/child-process-debug",
  "_nodeVersion": "0.12.0",
  "_npmUser": {
    "name": "fastest963",
    "email": "fastest963@gmail.com"
  },
  "_npmVersion": "2.6.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "child-process-debug@0.0.7",
    "scope": null,
    "escapedName": "child-process-debug",
    "name": "child-process-debug",
    "rawSpec": "0.0.7",
    "spec": "0.0.7",
    "type": "version"
  },
  "_requiredBy": [
    "/chimp"
  ],
  "_resolved": "https://registry.npmjs.org/child-process-debug/-/child-process-debug-0.0.7.tgz",
  "_shasum": "54e11fb81c3b6f94a96b631faca93ed1af7f8ad0",
  "_shrinkwrap": null,
  "_spec": "child-process-debug@0.0.7",
  "_where": "C:\\interview\\tontineApp\\node_modules\\chimp",
  "author": {
    "name": "James Hartig",
    "email": "fastest963@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/fastest963/child-process-debug/issues"
  },
  "dependencies": {},
  "description": "Convenience methods for debugging child-process",
  "devDependencies": {
    "nodeunit": "~0.9.0",
    "require-reload": "~0.2.2"
  },
  "directories": {
    "test": "tests"
  },
  "dist": {
    "shasum": "54e11fb81c3b6f94a96b631faca93ed1af7f8ad0",
    "tarball": "https://registry.npmjs.org/child-process-debug/-/child-process-debug-0.0.7.tgz"
  },
  "engineStrict": true,
  "engines": {
    "node": ">=0.10.33"
  },
  "gitHead": "690c80fe5babea6b56f6a9d75855ba80a93b33c7",
  "homepage": "https://github.com/fastest963/child-process-debug#readme",
  "keywords": [
    "child_process",
    "child",
    "process",
    "debug",
    "debugger"
  ],
  "license": "MIT",
  "main": "debug.js",
  "maintainers": [
    {
      "name": "fastest963",
      "email": "fastest963@gmail.com"
    }
  ],
  "name": "child-process-debug",
  "optionalDependencies": {},
  "readme": "# child-process-debug #\n\nConvenience methods for debugging child processes in Node.JS. Child processes will be started with `--debug` if the\nparent was started with `--debug` and the children will each get their own increasing port number based off the \nparent's port number. The default port is 5858. If you add `--debug-brk` that will also get passed to the children.\n\n## Example ##\n```JS\nvar childProcessDebug = require('child-process-debug');\n\nfor (var i = 0; i < 4; i++) {\n    //if this script wasn't run with --debug this will spawn node example.js [0-3]\n    //if this script was run with --debug, this will spawn node --debug=[5859-5862] example.js [0-3]\n    childProcessDebug.spawn(['example.js', i]);\n}\n```\n\n## Methods ##\n\n### spawn([command][, args][, options]) ###\nThis takes the exact same arguments as `child_process.spawn` and if the parent had debugging turned on (via --debug),\nit'll turn on debugging for the spawned child. `command` is also optional (unlike `child_process.spawn`) and defaults\nto `process.execPath`.\n\nThe ChildProcess returned from spawn will have a property called `debugPort` indicating the debug port chosen for that\nchild or undefined.\n\n### fork(modulePath [, args][, options]) ###\nThis takes the exact same arguments as `child_process.fork` and if the parent had debugging turned on (via --debug),\nit'll turn on debugging for the spawned child. Return is the same as `spawn` above.\n\n### nextPort() ###\nReturns the next debug port that comes after the current process's debug port. If the current process doesn't have\ndebug turned on then this will return undefined. This is useful if you're not using `spawn` and want to specify the\n`--debug=port` argument yourself.\n\n### exitWithParent(child) ###\nKill's the spawned child when the parent dies. This will not work if the parent is killed with SIGKILL.\n\n### port() ###\nReturns the current process's debug port or undefined if debug is not turned on.\n\n### debugBreak() ###\nReturns true if the current process has the flag `--debug-brk`.\n\nBy [James Hartig](https://github.com/fastest963/)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/fastest963/child-process-debug.git"
  },
  "scripts": {
    "test": "nodeunit tests"
  },
  "version": "0.0.7"
}
